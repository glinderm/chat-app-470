{"version":3,"sources":["firebase.js","contexts/AuthContext.js","components/Signup.js","components/Dashboard.js","components/Login.js","components/ForgotPassword.js","components/PrivateRoute.js","components/UpdateProfile.js","components/ChatRoom.js","App.js","index.js"],"names":["auth","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","ref","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","signup","email","password","createUserWithEmailAndPassword","login","signInWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","Provider","Signup","emailRef","useRef","passwordRef","passwordConfirmRef","error","setError","history","useHistory","e","a","preventDefault","current","push","Card","Body","className","Alert","variant","Form","onSubmit","Group","id","Label","Control","type","required","Button","disabled","to","Dashboard","pushState","username","onClick","Login","ForgotPassword","message","setMessage","PrivateRoute","Component","component","rest","render","props","UpdateProfile","promises","Promise","all","then","catch","finally","defaultValue","placeholder","Chatroom","Container","fluid","Row","Col","class","name","msg","document","getElementById","tr","insertRow","th","insertCell","td","innerHTML","scope","App","exact","path","ChatRoom","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.3d4200c5.chunk.js","sourcesContent":["import firebase from 'firebase/compat/app';\r\nimport \"firebase/compat/auth\";\r\nimport \"firebase/compat/database\";\r\n\r\nconst app = firebase.initializeApp({\r\n  apiKey: \"AIzaSyA47rt-dBAdeVVVbCqPxtgfbcWmUv3zOAE\",\r\n  authDomain: \"c470chatapp.firebaseapp.com\",\r\n  databaseURL: \"https://c470chatapp-default-rtdb.firebaseio.com\",\r\n  projectId: \"c470chatapp\",\r\n  storageBucket: \"c470chatapp.appspot.com\",\r\n  messagingSenderId: \"539063625518\",\r\n  appId: \"1:539063625518:web:58080cf2b0ce8e81047cbf\"\r\n})\r\n\r\n\r\nexport const chatsRef = firebase.database().ref(\"chats\");\r\nexport const auth = firebase.auth();\r\nexport default app;","import React, { useContext, useState, useEffect } from 'react'\r\nimport { auth } from '../firebase'\r\n//import { db } from \"../firebase\";\r\n//import { auth } from '../login.js'\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nexport function useAuth() {\r\n    return useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n    const [currentUser, setCurrentUser] = useState();\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    function signup(email, password) {\r\n        return auth.createUserWithEmailAndPassword(email, password);\r\n    }\r\n\r\n    function login(email, password) {\r\n        return auth.signInWithEmailAndPassword(email, password);\r\n    }\r\n\r\n    function logout() {\r\n        return auth.signOut();\r\n    }\r\n\r\n    function resetPassword(email) {\r\n        return auth.sendPasswordResetEmail(email);\r\n    }\r\n\r\n    function updateEmail(email) {\r\n        return currentUser.updateEmail(email);\r\n    }\r\n\r\n    function updatePassword(password) {\r\n        return currentUser.updatePassword(password);\r\n    }\r\n\r\n    // function updateUsername(username) {\r\n    //     return currentUser.updateUsername(username);\r\n    // }\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged(user => {\r\n            setCurrentUser(user);\r\n            setLoading(false);\r\n        })\r\n\r\n        return unsubscribe;\r\n    }, [])\r\n    \r\n\r\n    const value = {\r\n        currentUser,\r\n        signup,\r\n        login,\r\n        logout,\r\n        resetPassword,\r\n        updateEmail,\r\n        updatePassword\r\n        // updateUsername\r\n    }\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {!loading && children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n","import React, { useRef, useState } from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../App.css';\r\nimport { Card, Button, Form, Alert } from 'react-bootstrap'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { Link } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function Signup() {\r\n    const emailRef = useRef();\r\n    const passwordRef = useRef();\r\n    const passwordConfirmRef = useRef();\r\n    const { signup } = useAuth();\r\n    const [error, setError] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const history = useHistory();\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n            return setError(\"Passwords do not match\");\r\n        }\r\n\r\n        try {\r\n            setError(\"\");\r\n            setLoading(true);\r\n            await signup(emailRef.current.value, passwordRef.current.value);\r\n            history.push(\"/\");\r\n            // history.pushState(\"/createUser\");\r\n        } catch {\r\n            setError(\"Failed to create account\")\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <Card.Body className=\"card-body\">\r\n                    <h2 className='text-center mb-4'>Sign Up</h2>\r\n                    {error && <Alert variant='danger'>{error}</Alert>}\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group id='email'>\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type='email' ref={emailRef} required className=\"signup-btn\" />\r\n                        </Form.Group>\r\n                        <Form.Group id='password'>\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type='password' ref={passwordRef} required className=\"signup-btn\" />\r\n                        </Form.Group>\r\n                        <Form.Group id='password-confirm'>\r\n                            <Form.Label>Confirm Password</Form.Label>\r\n                            <Form.Control type='password' ref={passwordConfirmRef} required className=\"signup-btn\" />\r\n                        </Form.Group>\r\n                        <Button disabled={loading} type=\"submit\">Sign Up</Button>\r\n                    </Form>\r\n                </Card.Body>\r\n            </Card>\r\n            <div className='w-100 text-center mt-2'>\r\n                Already have an account? <Link to=\"/login\">Login</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../App.css';\r\nimport { Card, Button, Alert } from 'react-bootstrap'\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nexport default function Dashboard() {\r\n    const [error, setError] = useState(\"\");\r\n    const { currentUser, logout } = useAuth();\r\n    const history = useHistory();\r\n\r\n    async function handleLogout() {\r\n        setError(\"\");\r\n\r\n        try {\r\n            await logout();\r\n            history.pushState(\"/login\");\r\n        } catch {\r\n            setError(\"Failed to log out\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body className=\"card-body\">\r\n                    <h2>Profile</h2>\r\n                    {error && <Alert variant='danger'>{error}</Alert>}\r\n                    <p><strong>Username: </strong> {currentUser.username}</p>\r\n                    <p><strong>Email: </strong> {currentUser.email}</p>\r\n                    <p></p>\r\n                    <p></p>\r\n                    <p>\r\n                    <Link to=\"/chat-room\" className=\"btn btn-success\">Chatroom</Link>\r\n                    <Link to=\"/update-profile\" className=\"btn btn-primary\">Profile Settings</Link>\r\n                    </p>\r\n                </Card.Body>\r\n            </Card>\r\n            <div className='w-100 text-center mt-2'>\r\n                <Button variant=\"link\" onClick={handleLogout}>Log Out</Button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useRef, useState } from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../App.css';\r\nimport { Card, Button, Form, Alert } from 'react-bootstrap'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { Link } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function Login() {\r\n    const emailRef = useRef();\r\n    const passwordRef = useRef();\r\n    const { login } = useAuth();\r\n    const [error, setError] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const history = useHistory();\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            setError(\"\");\r\n            setLoading(true);\r\n            await login(emailRef.current.value, passwordRef.current.value);\r\n            history.push(\"/\");\r\n        } catch {\r\n            setError(\"Failed to sign in\")\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <Card.Body className=\"card-body\">\r\n                    <h2 className='text-center mb-4'>Login</h2>\r\n                    {error && <Alert variant='danger'>{error}</Alert>}\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group id='email'>\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type='email' ref={emailRef} required className=\"signup-btn\" />\r\n                        </Form.Group>\r\n                        <Form.Group id='password'>\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type='password' ref={passwordRef} required className=\"signup-btn\" />\r\n                        </Form.Group>\r\n                        <Button disabled={loading} type=\"submit\">Login</Button>\r\n                    </Form>\r\n                    <div className='w-100 text-center mt-3'>\r\n                        <Link to=\"/forgot-password\">Forgot your password?</Link>\r\n                    </div>\r\n                </Card.Body>\r\n            </Card>\r\n            <div className='w-100 text-center mt-2'>\r\n                Don't have an account? <Link to=\"/signup\">Sign up here!</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useRef, useState } from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../App.css';\r\nimport { Card, Button, Form, Alert } from 'react-bootstrap'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function ForgotPassword() {\r\n    const emailRef = useRef();\r\n    const { resetPassword } = useAuth();\r\n    const [error, setError] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            setMessage(\"\");\r\n            setError(\"\");\r\n            setLoading(true);\r\n            await resetPassword(emailRef.current.value);\r\n            setMessage(\"Check your email inbox for your password reset\");\r\n        } catch {\r\n            setError(\"Failed to reset password\")\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <Card.Body className=\"card-body\">\r\n                    <h2 className='text-center mb-4'>Reset my password</h2>\r\n                    {error && <Alert variant='danger'>{error}</Alert>}\r\n                    {message && <Alert variant='success'>{message}</Alert>}\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group id='email'>\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type='email' ref={emailRef} required className=\"signup-btn\" />\r\n                        </Form.Group>\r\n                        <Button disabled={loading} type=\"submit\">Reset Password</Button>\r\n                    </Form>\r\n                    <div className='w-100 text-center mt-3'>\r\n                        <Link to=\"/login\">Login</Link>\r\n                    </div>\r\n                </Card.Body>\r\n            </Card>\r\n            <div className='w-100 text-center mt-2'>\r\n                Don't have an account? <Link to=\"/signup\">Sign up here!</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n    \r\n    const { currentUser } = useAuth();\r\n\r\n    return (\r\n        <Route\r\n         {...rest}\r\n          render={props => {\r\n            return currentUser ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n          }}\r\n        ></Route>\r\n    )\r\n}\r\n","import React, { useRef, useState } from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../App.css';\r\nimport { Card, Button, Form, Alert } from 'react-bootstrap'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { Link } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function UpdateProfile() {\r\n    const emailRef = useRef();\r\n    const passwordRef = useRef();\r\n    const passwordConfirmRef = useRef();\r\n    // const usernameRef = useRef();\r\n    // const { currentUser, updatePassword, updateEmail, updateUsername } = useAuth();\r\n    const { currentUser, updatePassword, updateEmail } = useAuth();\r\n    const [error, setError] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const history = useHistory();\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n            return setError(\"Passwords do not match\");\r\n        }\r\n\r\n        const promises = [];\r\n        setLoading(true);\r\n        setError(\"\");\r\n        if (emailRef.current.value !== currentUser.email) {\r\n            promises.push(updateEmail(emailRef.current.value));\r\n        }\r\n\r\n        if (passwordRef.current.value) {\r\n            promises.push(updatePassword(passwordRef.current.value));\r\n        }\r\n\r\n        // if (usernameRef.current.value !== currentUser.username) {\r\n        //     promises.push(updateUsername(usernameRef.current.value));\r\n        // }\r\n\r\n        Promise.all(promises).then(() => {\r\n            history.push(\"/\");\r\n        }).catch(() => {\r\n            setError(\"Failed to update account\")\r\n        }).finally(() => {\r\n            setLoading(false);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <Card.Body className=\"card-body\">\r\n                    <h2 className='text-center mb-4'>Update Profile</h2>\r\n                    {error && <Alert variant='danger'>{error}</Alert>}\r\n                    <Form onSubmit={handleSubmit}>\r\n                        {/* <Form.Group id='username'>\r\n                            <Form.Label>Username</Form.Label>\r\n                            <Form.Control type='username' ref={usernameRef} defaultValue={currentUser.username} className=\"signup-btn\" />\r\n                        </Form.Group> */}\r\n                        <Form.Group id='email'>\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type='email' ref={emailRef} required defaultValue={currentUser.email} className=\"signup-btn\" />\r\n                        </Form.Group>\r\n                        <Form.Group id='password'>\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type='password' ref={passwordRef} placeholder=\"Leave blank to leave the same\" className=\"signup-btn\" />\r\n                        </Form.Group>\r\n                        <Form.Group id='password-confirm'>\r\n                            <Form.Label>Confirm Password</Form.Label>\r\n                            <Form.Control type='password' ref={passwordConfirmRef} placeholder=\"Leave blank to leave the same\" className=\"signup-btn\" />\r\n                        </Form.Group>\r\n                        <Button disabled={loading} type=\"submit\">Update</Button>\r\n                    </Form>\r\n                </Card.Body>\r\n            </Card>\r\n            <div className='w-100 text-center mt-2'>\r\n                <Link to=\"/\">Cancel</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n// import React, { useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../App.css';\r\nimport {  } from 'react-bootstrap';\r\nimport { Container, Row, Col, Button } from 'react-bootstrap'\r\n// import { useAuth } from \"../contexts/AuthContext\";\r\n// import { useHistory } from \"react-router-dom\";\r\nimport { chatsRef } from \"../firebase\";\r\n\r\nexport default function Chatroom() {\r\n    // const [error, setError] = useState(\"\");\r\n    // const { currentUser, chatMsg } = useAuth();\r\n    // const history = useHistory();\r\n    let current = 0;\r\n\r\n    function sendChat() {\r\n        let msg = document.getElementById(\"chat-input\");\r\n        if (msg.value === \"\") {\r\n            return;\r\n        }\r\n    \r\n        let table = document.getElementById(\"chat-table\");\r\n        let tr = table.insertRow(current);\r\n        let th = tr.insertCell(0);\r\n        let td = tr.insertCell(1);\r\n        //let x = tr.insertCell(2);\r\n        \r\n        //x.innerHTML = '<Button type=\"submit\" className=\"xBtn\" id=\"x' + current + '\" onClick={deleteChat}>' + 'X' + '</Button>'\r\n        //x.innerHTML = '<button onClick=\"deleteChat()\">X</button>';\r\n        td.innerHTML = msg.value;\r\n        td.className = \"chat-row\";\r\n        th.innerHTML = current;\r\n        tr.id = \"chat-\" + current;\r\n        th.scope = \"row\";\r\n        th.className = \"msg-index\";\r\n        msg.value = \"\";\r\n        current++;\r\n    }\r\n\r\n    // chatsRef.once(\"value\", function(ss){\r\n    //     // document.querySelector('#chat-table').remove();\r\n    //     let i = 0;\r\n    //     let table = document.getElementById(\"chat-table\");\r\n    //     ss.forEach(function(item) {\r\n    //        document.querySelector('#chat-table').insertRow(i)\r\n           \r\n    //        let tr = table.insertRow(i);\r\n    //        let th = tr.insertCell(0);\r\n    //        let td = tr.insertCell(1);\r\n    //        td.innerHTML = item.val();\r\n    //        td.className = \"chat-row\";\r\n    //        th.innerHTM = i;\r\n    //        tr.id = \"chat-\" + i;\r\n    //        th.className = \"msg-index\";\r\n\r\n    //        i++;\r\n    //     });\r\n    //   });\r\n\r\n    return (\r\n        <div className=\"chatroom-page\" id=\"chat-main\">\r\n            <Container className=\"App\" fluid>\r\n                <Row className=\"main-page\">\r\n                    <Col className=\"main-page\">\r\n                        <Row className=\"App-header\">\r\n                            <h6>Echo Chamber</h6>\r\n                        </Row>\r\n                        <Row className=\"App-body\">\r\n                            <div className='chatlog-body' id=\"chat-body\">\r\n                                <table id='chat-table' class=\"table table-striped table-responsive\">\r\n                                <tbody>\r\n                                </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </Row>\r\n                        <Row className=\"App-chatbox\">\r\n                            <label>\r\n                                <input type=\"text\" name=\"chat-input\" id=\"chat-input\" />\r\n                                <Button type=\"submit\" id=\"chat-submit\" onClick={sendChat}>Send</Button>\r\n                            </label>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport Signup from \"./components/Signup\";\nimport { AuthProvider } from \"./contexts/AuthContext\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Dashboard from \"./components/Dashboard\";\nimport Login from \"./components/Login\";\nimport ForgotPassword from \"./components/ForgotPassword\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport UpdateProfile from \"./components/UpdateProfile\";\n// import CreateUser from \"./components/CreateUser\";\nimport ChatRoom from \"./components/ChatRoom\";\n\n\nfunction App() {\n  return (\n    <div>\n      <Router>\n        <AuthProvider>\n          <Switch>\n            <PrivateRoute exact path=\"/\" component={Dashboard} />\n            <PrivateRoute path=\"/update-profile\" component={UpdateProfile} />\n            <PrivateRoute path=\"/chat-room\" component={ChatRoom} />\n            {/* <PrivateRoute path=\"/createUser\" component={CreateUser} /> */}\n            <Route path=\"/signup\" component={Signup} />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/chat-app-470\" component={Login} />\n            <Route path=\"/forgot-password\" component={ForgotPassword} />\n          </Switch>\n        </AuthProvider>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}